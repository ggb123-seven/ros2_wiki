#!/usr/bin/env python3
"""
创建测试用户用于搜索功能测试
"""

import sys
from app import app
from app_blueprints.permissions import get_user_manager

def create_test_users():
    """创建测试用户"""
    print("🔧 创建测试用户...")
    
    try:
        um = get_user_manager()
        
        # 测试用户数据
        test_users = [
            {
                'username': 'test_user_1',
                'email': 'test1@example.com',
                'password': 'TestPassword123!',
                'is_admin': False
            },
            {
                'username': 'test_user_2',
                'email': 'test2@example.com',
                'password': 'TestPassword123!',
                'is_admin': False
            },
            {
                'username': 'admin_test',
                'email': 'admin@example.com',
                'password': 'AdminPassword123!',
                'is_admin': True
            },
            {
                'username': 'john_doe',
                'email': 'john.doe@company.com',
                'password': 'JohnPassword123!',
                'is_admin': False
            },
            {
                'username': 'jane_smith',
                'email': 'jane.smith@company.com',
                'password': 'JanePassword123!',
                'is_admin': False
            }
        ]
        
        created_count = 0
        for user_data in test_users:
            success, message = um.create_user(
                user_data['username'],
                user_data['email'],
                user_data['password'],
                user_data['is_admin']
            )
            
            if success:
                print(f"✅ 创建用户: {user_data['username']} ({user_data['email']})")
                created_count += 1
            else:
                print(f"⚠️ 用户创建失败: {user_data['username']} - {message}")
        
        print(f"\n📊 创建结果: {created_count}/{len(test_users)} 用户创建成功")
        
        # 显示所有用户
        all_users = um.get_all_users(page=1, per_page=20)
        print(f"\n👥 当前用户总数: {all_users['total']}")
        print("用户列表:")
        for user in all_users['users']:
            admin_status = "管理员" if user.get('is_admin') else "普通用户"
            print(f"  - {user.get('username')} ({user.get('email')}) - {admin_status}")
        
        return True
        
    except Exception as e:
        print(f"❌ 创建测试用户异常: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == '__main__':
    success = create_test_users()
    sys.exit(0 if success else 1)
